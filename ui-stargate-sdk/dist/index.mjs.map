{"version":3,"sources":["../src/config/mainnet/pools.json","../src/utils/toConfig.ts","../src/config/mainnet.ts","../src/bridge/StargateBridge__evm.ts","../src/evm/contracts/factories/Pool__factory.ts","../src/evm/contracts/factories/Router__factory.ts","../src/evm/contracts/factories/RouterETH__factory.ts","../src/evm/contracts/factories/StargateFeeLibrary__factory.ts","../src/evm/contracts/factories/StargateWidget__factory.ts","../src/utils/currencyKey.ts","../src/bridge/StargateWidgetBridge__evm.ts","../src/StargateSDK.ts"],"names":["getNativeCurrency","Contract","utils","_abi","createTransaction","CurrencyAmount","toBigNumber","castCurrencyAmountUnsafe","isNativeCurrency","isToken","MaxUint256","assert","ChainId"],"mappings":"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","sourcesContent":["[\n  {\n    \"chainId\": 101,\n    \"poolId\": 1,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n      \"symbol\": \"USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0xdf0770dF86a8034b3EFEf0A1Bb3c889B8332FF56\",\n      \"symbol\": \"S*USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin-LP\"\n    }\n  },\n  {\n    \"chainId\": 101,\n    \"poolId\": 2,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n      \"symbol\": \"USDT\",\n      \"decimals\": 6,\n      \"name\": \"Tether USD\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0x38EA452219524Bb87e18dE1C24D3bB59510BD783\",\n      \"symbol\": \"S*USDT\",\n      \"decimals\": 6,\n      \"name\": \"Tether USD-LP\"\n    }\n  },\n  {\n    \"chainId\": 101,\n    \"poolId\": 11,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6\",\n      \"symbol\": \"USDD\",\n      \"decimals\": 18,\n      \"name\": \"Decentralized USD\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0x692953e758c3669290cb1677180c64183cEe374e\",\n      \"symbol\": \"S*USDD\",\n      \"decimals\": 18,\n      \"name\": \"Decentralized USD-LP\"\n    }\n  },\n  {\n    \"chainId\": 101,\n    \"poolId\": 13,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0x72E2F4830b9E45d52F80aC08CB2bEC0FeF72eD9c\",\n      \"symbol\": \"SGETH\",\n      \"decimals\": 18,\n      \"name\": \"Stargate Ether Vault\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0x101816545F6bd2b1076434B54383a1E633390A2E\",\n      \"symbol\": \"S*SGETH\",\n      \"decimals\": 18,\n      \"name\": \"Stargate Ether Vault-LP\"\n    }\n  },\n  {\n    \"chainId\": 101,\n    \"poolId\": 3,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n      \"symbol\": \"DAI\",\n      \"decimals\": 18,\n      \"name\": \"Dai Stablecoin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0x0Faf1d2d3CED330824de3B8200fc8dc6E397850d\",\n      \"symbol\": \"S*DAI\",\n      \"decimals\": 6,\n      \"name\": \"Dai Stablecoin-LP\"\n    }\n  },\n  {\n    \"chainId\": 101,\n    \"poolId\": 7,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0x853d955aCEf822Db058eb8505911ED77F175b99e\",\n      \"symbol\": \"FRAX\",\n      \"decimals\": 18,\n      \"name\": \"Frax\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0xfA0F307783AC21C39E939ACFF795e27b650F6e68\",\n      \"symbol\": \"S*FRAX\",\n      \"decimals\": 6,\n      \"name\": \"Frax-LP\"\n    }\n  },\n  {\n    \"chainId\": 101,\n    \"poolId\": 14,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51\",\n      \"symbol\": \"sUSD\",\n      \"decimals\": 18,\n      \"name\": \"Synth sUSD\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0x590d4f8A68583639f215f675F3a259Ed84790580\",\n      \"symbol\": \"S*sUSD\",\n      \"decimals\": 6,\n      \"name\": \"Synth sUSD-LP\"\n    }\n  },\n  {\n    \"chainId\": 101,\n    \"poolId\": 15,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0\",\n      \"symbol\": \"LUSD\",\n      \"decimals\": 18,\n      \"name\": \"LUSD Stablecoin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0xE8F55368C82D38bbbbDb5533e7F56AfC2E978CC2\",\n      \"symbol\": \"S*LUSD\",\n      \"decimals\": 6,\n      \"name\": \"LUSD Stablecoin-LP\"\n    }\n  },\n  {\n    \"chainId\": 101,\n    \"poolId\": 16,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6\",\n      \"symbol\": \"MAI\",\n      \"decimals\": 18,\n      \"name\": \"Mai Stablecoin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0x9cef9a0b1bE0D289ac9f4a98ff317c33EAA84eb8\",\n      \"symbol\": \"S*MAI\",\n      \"decimals\": 6,\n      \"name\": \"Mai Stablecoin-LP\"\n    }\n  },\n  {\n    \"chainId\": 101,\n    \"poolId\": 17,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0x9E32b13ce7f2E80A01932B42553652E053D6ed8e\",\n      \"symbol\": \"Metis\",\n      \"decimals\": 18,\n      \"name\": \"Metis Token\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0xd8772edBF88bBa2667ed011542343b0eDDaCDa47\",\n      \"symbol\": \"S*Metis\",\n      \"decimals\": 18,\n      \"name\": \"Metis Token-LP\"\n    }\n  },\n  {\n    \"chainId\": 101,\n    \"poolId\": 19,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n      \"symbol\": \"USDT\",\n      \"decimals\": 6,\n      \"name\": \"Tether USD\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0x430Ebff5E3E80A6C58E7e6ADA1d90F5c28AA116d\",\n      \"symbol\": \"S*USDT\",\n      \"decimals\": 6,\n      \"name\": \"Tether USD-LP\"\n    }\n  },\n  {\n    \"chainId\": 101,\n    \"poolId\": 20,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 101,\n      \"address\": \"0x4691937a7508860F876c9c0a2a617E7d9E945D4B\",\n      \"symbol\": \"WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network\"\n    },\n    \"lpToken\": {\n      \"chainId\": 101,\n      \"address\": \"0x1CE66c52C36757Daf6551eDc04800A0Ec9983A09\",\n      \"symbol\": \"S*WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network-LP\"\n    }\n  },\n  {\n    \"chainId\": 102,\n    \"poolId\": 2,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 102,\n      \"address\": \"0x55d398326f99059fF775485246999027B3197955\",\n      \"symbol\": \"USDT\",\n      \"decimals\": 18,\n      \"name\": \"Tether USD\"\n    },\n    \"lpToken\": {\n      \"chainId\": 102,\n      \"address\": \"0x9aA83081AA06AF7208Dcc7A4cB72C94d057D2cda\",\n      \"symbol\": \"S*USDT\",\n      \"decimals\": 6,\n      \"name\": \"Tether USD-LP\"\n    }\n  },\n  {\n    \"chainId\": 102,\n    \"poolId\": 5,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 102,\n      \"address\": \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\",\n      \"symbol\": \"BUSD\",\n      \"decimals\": 18,\n      \"name\": \"BUSD Token\"\n    },\n    \"lpToken\": {\n      \"chainId\": 102,\n      \"address\": \"0x98a5737749490856b401DB5Dc27F522fC314A4e1\",\n      \"symbol\": \"S*BUSD\",\n      \"decimals\": 6,\n      \"name\": \"BUSD Token-LP\"\n    }\n  },\n  {\n    \"chainId\": 102,\n    \"poolId\": 11,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 102,\n      \"address\": \"0xd17479997F34dd9156Deef8F95A52D81D265be9c\",\n      \"symbol\": \"USDD\",\n      \"decimals\": 18,\n      \"name\": \"Decentralized USD\"\n    },\n    \"lpToken\": {\n      \"chainId\": 102,\n      \"address\": \"0x4e145a589e4c03cBe3d28520e4BF3089834289Df\",\n      \"symbol\": \"S*USDD\",\n      \"decimals\": 18,\n      \"name\": \"Decentralized USD-LP\"\n    }\n  },\n  {\n    \"chainId\": 102,\n    \"poolId\": 16,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 102,\n      \"address\": \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\",\n      \"symbol\": \"MAI\",\n      \"decimals\": 18,\n      \"name\": \"Mai Stablecoin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 102,\n      \"address\": \"0x7BfD7f2498C4796f10b6C611D9db393D3052510C\",\n      \"symbol\": \"S*MAI\",\n      \"decimals\": 6,\n      \"name\": \"Mai Stablecoin-LP\"\n    }\n  },\n  {\n    \"chainId\": 102,\n    \"poolId\": 17,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 102,\n      \"address\": \"0xe552Fb52a4F19e44ef5A967632DBc320B0820639\",\n      \"symbol\": \"Metis\",\n      \"decimals\": 18,\n      \"name\": \"Metis Token\"\n    },\n    \"lpToken\": {\n      \"chainId\": 102,\n      \"address\": \"0xD4CEc732b3B135eC52a3c0bc8Ce4b8cFb9dacE46\",\n      \"symbol\": \"S*Metis\",\n      \"decimals\": 18,\n      \"name\": \"Metis Token-LP\"\n    }\n  },\n  {\n    \"chainId\": 102,\n    \"poolId\": 19,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 102,\n      \"address\": \"0x55d398326f99059fF775485246999027B3197955\",\n      \"symbol\": \"USDT\",\n      \"decimals\": 18,\n      \"name\": \"Tether USD\"\n    },\n    \"lpToken\": {\n      \"chainId\": 102,\n      \"address\": \"0x68C6c27fB0e02285829e69240BE16f32C5f8bEFe\",\n      \"symbol\": \"S*USDT\",\n      \"decimals\": 6,\n      \"name\": \"Tether USD-LP\"\n    }\n  },\n  {\n    \"chainId\": 102,\n    \"poolId\": 20,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 102,\n      \"address\": \"0x4691937a7508860F876c9c0a2a617E7d9E945D4B\",\n      \"symbol\": \"WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network\"\n    },\n    \"lpToken\": {\n      \"chainId\": 102,\n      \"address\": \"0x5a0F550bfCaDe1D898034D57A6f72E7Aef32CE79\",\n      \"symbol\": \"S*WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network-LP\"\n    }\n  },\n  {\n    \"chainId\": 106,\n    \"poolId\": 1,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 106,\n      \"address\": \"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\",\n      \"symbol\": \"USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 106,\n      \"address\": \"0x1205f31718499dBf1fCa446663B532Ef87481fe1\",\n      \"symbol\": \"S*USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin-LP\"\n    }\n  },\n  {\n    \"chainId\": 106,\n    \"poolId\": 2,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 106,\n      \"address\": \"0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7\",\n      \"symbol\": \"USDt\",\n      \"decimals\": 6,\n      \"name\": \"TetherToken\"\n    },\n    \"lpToken\": {\n      \"chainId\": 106,\n      \"address\": \"0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c\",\n      \"symbol\": \"S*USDt\",\n      \"decimals\": 6,\n      \"name\": \"TetherToken-LP\"\n    }\n  },\n  {\n    \"chainId\": 106,\n    \"poolId\": 7,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 106,\n      \"address\": \"0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64\",\n      \"symbol\": \"FRAX\",\n      \"decimals\": 18,\n      \"name\": \"Frax\"\n    },\n    \"lpToken\": {\n      \"chainId\": 106,\n      \"address\": \"0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea\",\n      \"symbol\": \"S*FRAX\",\n      \"decimals\": 6,\n      \"name\": \"Frax-LP\"\n    }\n  },\n  {\n    \"chainId\": 106,\n    \"poolId\": 16,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 106,\n      \"address\": \"0x5c49b268c9841AFF1Cc3B0a418ff5c3442eE3F3b\",\n      \"symbol\": \"MAI\",\n      \"decimals\": 18,\n      \"name\": \"Mai Stablecoin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 106,\n      \"address\": \"0x8736f92646B2542B3e5F3c63590cA7Fe313e283B\",\n      \"symbol\": \"S*MAI\",\n      \"decimals\": 6,\n      \"name\": \"Mai Stablecoin-LP\"\n    }\n  },\n  {\n    \"chainId\": 106,\n    \"poolId\": 19,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 106,\n      \"address\": \"0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7\",\n      \"symbol\": \"USDt\",\n      \"decimals\": 6,\n      \"name\": \"TetherToken\"\n    },\n    \"lpToken\": {\n      \"chainId\": 106,\n      \"address\": \"0xEAe5c2F6B25933deB62f754f239111413A0A25ef\",\n      \"symbol\": \"S*USDt\",\n      \"decimals\": 6,\n      \"name\": \"TetherToken-LP\"\n    }\n  },\n  {\n    \"chainId\": 106,\n    \"poolId\": 20,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 106,\n      \"address\": \"0xaBC9547B534519fF73921b1FBA6E672b5f58D083\",\n      \"symbol\": \"WOO.e\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network\"\n    },\n    \"lpToken\": {\n      \"chainId\": 106,\n      \"address\": \"0x45524dc9d05269E1101Ad7Cff1639AE2aA20989d\",\n      \"symbol\": \"S*WOO.e\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network-LP\"\n    }\n  },\n  {\n    \"chainId\": 109,\n    \"poolId\": 1,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 109,\n      \"address\": \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\",\n      \"symbol\": \"USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin (PoS)\"\n    },\n    \"lpToken\": {\n      \"chainId\": 109,\n      \"address\": \"0x1205f31718499dBf1fCa446663B532Ef87481fe1\",\n      \"symbol\": \"S*USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin (PoS)-LP\"\n    }\n  },\n  {\n    \"chainId\": 109,\n    \"poolId\": 2,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 109,\n      \"address\": \"0xc2132D05D31c914a87C6611C10748AEb04B58e8F\",\n      \"symbol\": \"USDT\",\n      \"decimals\": 6,\n      \"name\": \"(PoS) Tether USD\"\n    },\n    \"lpToken\": {\n      \"chainId\": 109,\n      \"address\": \"0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c\",\n      \"symbol\": \"S*USDT\",\n      \"decimals\": 6,\n      \"name\": \"(PoS) Tether USD-LP\"\n    }\n  },\n  {\n    \"chainId\": 109,\n    \"poolId\": 3,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 109,\n      \"address\": \"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063\",\n      \"symbol\": \"DAI\",\n      \"decimals\": 18,\n      \"name\": \"(PoS) Dai Stablecoin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 109,\n      \"address\": \"0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea\",\n      \"symbol\": \"S*DAI\",\n      \"decimals\": 6,\n      \"name\": \"(PoS) Dai Stablecoin-LP\"\n    }\n  },\n  {\n    \"chainId\": 109,\n    \"poolId\": 16,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 109,\n      \"address\": \"0xa3Fa99A148fA48D14Ed51d610c367C61876997F1\",\n      \"symbol\": \"miMATIC\",\n      \"decimals\": 18,\n      \"name\": \"miMATIC\"\n    },\n    \"lpToken\": {\n      \"chainId\": 109,\n      \"address\": \"0x8736f92646B2542B3e5F3c63590cA7Fe313e283B\",\n      \"symbol\": \"S*miMATIC\",\n      \"decimals\": 6,\n      \"name\": \"miMATIC-LP\"\n    }\n  },\n  {\n    \"chainId\": 109,\n    \"poolId\": 20,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 109,\n      \"address\": \"0x1B815d120B3eF02039Ee11dC2d33DE7aA4a8C603\",\n      \"symbol\": \"WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network (PoS)\"\n    },\n    \"lpToken\": {\n      \"chainId\": 109,\n      \"address\": \"0xEAe5c2F6B25933deB62f754f239111413A0A25ef\",\n      \"symbol\": \"S*WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network (PoS)-LP\"\n    }\n  },\n  {\n    \"chainId\": 110,\n    \"poolId\": 1,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 110,\n      \"address\": \"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\",\n      \"symbol\": \"USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin (Arb1)\"\n    },\n    \"lpToken\": {\n      \"chainId\": 110,\n      \"address\": \"0x892785f33CdeE22A30AEF750F285E18c18040c3e\",\n      \"symbol\": \"S*USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin (Arb1)-LP\"\n    }\n  },\n  {\n    \"chainId\": 110,\n    \"poolId\": 2,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 110,\n      \"address\": \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\",\n      \"symbol\": \"USDT\",\n      \"decimals\": 6,\n      \"name\": \"Tether USD\"\n    },\n    \"lpToken\": {\n      \"chainId\": 110,\n      \"address\": \"0xB6CfcF89a7B22988bfC96632aC2A9D6daB60d641\",\n      \"symbol\": \"S*USDT\",\n      \"decimals\": 6,\n      \"name\": \"Tether USD-LP\"\n    }\n  },\n  {\n    \"chainId\": 110,\n    \"poolId\": 13,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 110,\n      \"address\": \"0x82CbeCF39bEe528B5476FE6d1550af59a9dB6Fc0\",\n      \"symbol\": \"SGETH\",\n      \"decimals\": 18,\n      \"name\": \"Stargate Ether Vault\"\n    },\n    \"lpToken\": {\n      \"chainId\": 110,\n      \"address\": \"0x915A55e36A01285A14f05dE6e81ED9cE89772f8e\",\n      \"symbol\": \"S*SGETH\",\n      \"decimals\": 18,\n      \"name\": \"Stargate Ether Vault-LP\"\n    }\n  },\n  {\n    \"chainId\": 110,\n    \"poolId\": 7,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 110,\n      \"address\": \"0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F\",\n      \"symbol\": \"FRAX\",\n      \"decimals\": 18,\n      \"name\": \"Frax\"\n    },\n    \"lpToken\": {\n      \"chainId\": 110,\n      \"address\": \"0xaa4BF442F024820B2C28Cd0FD72b82c63e66F56C\",\n      \"symbol\": \"S*FRAX\",\n      \"decimals\": 6,\n      \"name\": \"Frax-LP\"\n    }\n  },\n  {\n    \"chainId\": 110,\n    \"poolId\": 16,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 110,\n      \"address\": \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\",\n      \"symbol\": \"MAI\",\n      \"decimals\": 18,\n      \"name\": \"Mai Stablecoin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 110,\n      \"address\": \"0xF39B7Be294cB36dE8c510e267B82bb588705d977\",\n      \"symbol\": \"S*MAI\",\n      \"decimals\": 6,\n      \"name\": \"Mai Stablecoin-LP\"\n    }\n  },\n  {\n    \"chainId\": 110,\n    \"poolId\": 15,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 110,\n      \"address\": \"0x93b346b6BC2548dA6A1E7d98E9a421B42541425b\",\n      \"symbol\": \"LUSD\",\n      \"decimals\": 18,\n      \"name\": \"LUSD Stablecoin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 110,\n      \"address\": \"0x600E576F9d853c95d58029093A16EE49646F3ca5\",\n      \"symbol\": \"S*LUSD\",\n      \"decimals\": 6,\n      \"name\": \"LUSD Stablecoin-LP\"\n    }\n  },\n  {\n    \"chainId\": 110,\n    \"poolId\": 20,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 110,\n      \"address\": \"0xcAFcD85D8ca7Ad1e1C6F82F651fA15E33AEfD07b\",\n      \"symbol\": \"WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network\"\n    },\n    \"lpToken\": {\n      \"chainId\": 110,\n      \"address\": \"0x1aE7ca4092C0027bBbB1ce99934528aCf6e7074B\",\n      \"symbol\": \"S*WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network-LP\"\n    }\n  },\n  {\n    \"chainId\": 111,\n    \"poolId\": 1,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 111,\n      \"address\": \"0x7F5c764cBc14f9669B88837ca1490cCa17c31607\",\n      \"symbol\": \"USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 111,\n      \"address\": \"0xDecC0c09c3B5f6e92EF4184125D5648a66E35298\",\n      \"symbol\": \"S*USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin-LP\"\n    }\n  },\n  {\n    \"chainId\": 111,\n    \"poolId\": 13,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 111,\n      \"address\": \"0xb69c8CBCD90A39D8D3d3ccf0a3E968511C3856A0\",\n      \"symbol\": \"SGETH\",\n      \"decimals\": 18,\n      \"name\": \"Stargate Ether Vault\"\n    },\n    \"lpToken\": {\n      \"chainId\": 111,\n      \"address\": \"0xd22363e3762cA7339569F3d33EADe20127D5F98C\",\n      \"symbol\": \"S*SGETH\",\n      \"decimals\": 18,\n      \"name\": \"Stargate Ether Vault-LP\"\n    }\n  },\n  {\n    \"chainId\": 111,\n    \"poolId\": 3,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 111,\n      \"address\": \"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1\",\n      \"symbol\": \"DAI\",\n      \"decimals\": 18,\n      \"name\": \"Dai Stablecoin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 111,\n      \"address\": \"0x165137624F1f692e69659f944BF69DE02874ee27\",\n      \"symbol\": \"S*DAI\",\n      \"decimals\": 6,\n      \"name\": \"Dai Stablecoin-LP\"\n    }\n  },\n  {\n    \"chainId\": 111,\n    \"poolId\": 7,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 111,\n      \"address\": \"0x2E3D870790dC77A83DD1d18184Acc7439A53f475\",\n      \"symbol\": \"FRAX\",\n      \"decimals\": 18,\n      \"name\": \"Frax\"\n    },\n    \"lpToken\": {\n      \"chainId\": 111,\n      \"address\": \"0x368605D9C6243A80903b9e326f1Cddde088B8924\",\n      \"symbol\": \"S*FRAX\",\n      \"decimals\": 6,\n      \"name\": \"Frax-LP\"\n    }\n  },\n  {\n    \"chainId\": 111,\n    \"poolId\": 14,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 111,\n      \"address\": \"0x8c6f28f2F1A3C87F0f938b96d27520d9751ec8d9\",\n      \"symbol\": \"sUSD\",\n      \"decimals\": 18,\n      \"name\": \"Synth sUSD\"\n    },\n    \"lpToken\": {\n      \"chainId\": 111,\n      \"address\": \"0x2F8bC9081c7FCFeC25b9f41a50d97EaA592058ae\",\n      \"symbol\": \"S*sUSD\",\n      \"decimals\": 6,\n      \"name\": \"Synth sUSD-LP\"\n    }\n  },\n  {\n    \"chainId\": 111,\n    \"poolId\": 15,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 111,\n      \"address\": \"0xc40F949F8a4e094D1b49a23ea9241D289B7b2819\",\n      \"symbol\": \"LUSD\",\n      \"decimals\": 18,\n      \"name\": \"LUSD Stablecoin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 111,\n      \"address\": \"0x3533F5e279bDBf550272a199a223dA798D9eff78\",\n      \"symbol\": \"S*LUSD\",\n      \"decimals\": 6,\n      \"name\": \"LUSD Stablecoin-LP\"\n    }\n  },\n  {\n    \"chainId\": 111,\n    \"poolId\": 16,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 111,\n      \"address\": \"0xdFA46478F9e5EA86d57387849598dbFB2e964b02\",\n      \"symbol\": \"MAI\",\n      \"decimals\": 18,\n      \"name\": \"Mai Stablecoin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 111,\n      \"address\": \"0x5421FA1A48f9FF81e4580557E86C7C0D24C18036\",\n      \"symbol\": \"S*MAI\",\n      \"decimals\": 6,\n      \"name\": \"Mai Stablecoin-LP\"\n    }\n  },\n  {\n    \"chainId\": 111,\n    \"poolId\": 20,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 111,\n      \"address\": \"0x871f2F2ff935FD1eD867842FF2a7bfD051A5E527\",\n      \"symbol\": \"WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network\"\n    },\n    \"lpToken\": {\n      \"chainId\": 111,\n      \"address\": \"0xB0a7e3b4aedB6F103BC43f2603c6e73151c8886b\",\n      \"symbol\": \"S*WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network-LP\"\n    }\n  },\n  {\n    \"chainId\": 112,\n    \"poolId\": 1,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 112,\n      \"address\": \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\",\n      \"symbol\": \"USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin\"\n    },\n    \"lpToken\": {\n      \"chainId\": 112,\n      \"address\": \"0x12edeA9cd262006cC3C4E77c90d2CD2DD4b1eb97\",\n      \"symbol\": \"S*USDC\",\n      \"decimals\": 6,\n      \"name\": \"USD Coin-LP\"\n    }\n  },\n  {\n    \"chainId\": 112,\n    \"poolId\": 20,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 112,\n      \"address\": \"0x6626c47c00F1D87902fc13EECfaC3ed06D5E8D8a\",\n      \"symbol\": \"WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network\"\n    },\n    \"lpToken\": {\n      \"chainId\": 112,\n      \"address\": \"0x333b6E02eFFD8bE6075F3de0D8075FeD842dd9a3\",\n      \"symbol\": \"S*WOO\",\n      \"decimals\": 18,\n      \"name\": \"Wootrade Network-LP\"\n    }\n  },\n  {\n    \"chainId\": 151,\n    \"poolId\": 17,\n    \"sharedDecimals\": 18,\n    \"token\": {\n      \"chainId\": 151,\n      \"address\": \"0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000\",\n      \"symbol\": \"Metis\",\n      \"decimals\": 18,\n      \"name\": \"Metis Token\"\n    },\n    \"lpToken\": {\n      \"chainId\": 151,\n      \"address\": \"0xAad094F6A75A14417d39f04E690fC216f080A41a\",\n      \"symbol\": \"S*Metis\",\n      \"decimals\": 18,\n      \"name\": \"Metis Token-LP\"\n    }\n  },\n  {\n    \"chainId\": 151,\n    \"poolId\": 19,\n    \"sharedDecimals\": 6,\n    \"token\": {\n      \"chainId\": 151,\n      \"address\": \"0xbB06DCA3AE6887fAbF931640f67cab3e3a16F4dC\",\n      \"symbol\": \"m.USDT\",\n      \"decimals\": 6,\n      \"name\": \"USDT Token\"\n    },\n    \"lpToken\": {\n      \"chainId\": 151,\n      \"address\": \"0x2b60473a7C41Deb80EDdaafD5560e963440eb632\",\n      \"symbol\": \"S*m.USDT\",\n      \"decimals\": 6,\n      \"name\": \"USDT Token-LP\"\n    }\n  }\n]\n","import {Token, getNativeCurrency} from '@layerzerolabs/ui-core';\nimport {FarmType, StargateConfig, StargateConfigLike, TokenLike} from '../StargateConfig';\nimport {ROUTER_ADDRESS, ROUTER_ETH_ADDRESS} from '@layerzerolabs/sg-sdk';\nimport {ChainId} from '@layerzerolabs/lz-sdk';\n\nexport function toConfig(input: StargateConfigLike): StargateConfig {\n  const pools = input.pools.map((json) => {\n    const chainId = json.chainId as ChainId;\n    const poolId = json.poolId as number;\n    const {sharedDecimals} = json;\n    const token = toToken(json.token);\n    const lpToken = toToken(json.lpToken);\n    const currency = json.poolId === 13 ? getNativeCurrency(chainId) : token;\n    const pool = {\n      poolId,\n      chainId,\n      token,\n      lpToken,\n      currency,\n      sharedDecimals,\n    };\n    return pool;\n  });\n  const farms = input.farms?.map((json) => {\n    const chainId = json.chainId as ChainId;\n    const lpToken = toToken(json.lpToken);\n    const rewardToken = toToken(json.rewardToken);\n    const farm = {\n      type: json.type as FarmType,\n      address: json.address,\n      pid: json.pid,\n      chainId,\n      lpToken,\n      rewardToken,\n    };\n    return farm;\n  });\n\n  const ofts = input.ofts?.map((oftConfig) => ({\n    ...oftConfig,\n    tokens: oftConfig.tokens.map(toToken),\n  }));\n\n  return {\n    pools,\n    ofts: ofts ?? [],\n    farms: farms ?? [],\n    router: input.router ?? ROUTER_ADDRESS,\n    routerEth: input.routerEth ?? ROUTER_ETH_ADDRESS,\n    disabled: input.disabled ?? [],\n  };\n}\n\nfunction toToken({address, chainId, decimals, symbol, name}: TokenLike): Token {\n  return new Token(chainId, address, decimals, symbol, name);\n}\n","import pools from './mainnet/pools.json';\nimport {toConfig} from '../utils/toConfig';\n\nexport const mainnet = toConfig({pools});\n","import {BridgeApi, validateInput, TransferInput} from '@layerzerolabs/ui-bridge-sdk';\nimport {\n  AdapterParams,\n  castCurrencyAmountUnsafe,\n  Currency,\n  CurrencyAmount,\n  FeeQuote,\n  getDefaultMessageDuration,\n  getNativeCurrency,\n  isEvmChainId,\n  isNativeCurrency,\n  isToken,\n  MaxUint256,\n  toBigNumber,\n  toCurrencyAmount,\n  Token,\n  Transaction,\n} from '@layerzerolabs/ui-core';\nimport {ONE_ADDRESS, ProviderFactory, createTransaction} from '@layerzerolabs/ui-evm';\nimport assert from 'assert';\nimport {constants, Signer} from 'ethers';\nimport {\n  Pool__factory,\n  Router,\n  RouterETH__factory,\n  Router__factory,\n  StargateFeeLibrary,\n  StargateFeeLibrary__factory,\n} from '../evm/contracts';\n\nimport {ERC20__api} from '@layerzerolabs/ui-erc20-sdk';\nimport {StargateSDK} from '../StargateSDK';\nimport pMemoize from 'p-memoize';\nimport {currencyKey} from '../utils/currencyKey';\n\ntype StargateFee = {\n  totalFee: CurrencyAmount;\n  eqFee: CurrencyAmount;\n  eqReward: CurrencyAmount;\n  lpFee: CurrencyAmount;\n  protocolFee: CurrencyAmount;\n  lkbRemove: CurrencyAmount;\n};\n\nenum FunctionType {\n  TYPE_SWAP_REMOTE = 1,\n  TYPE_WITHDRAW_REMOTE = 4,\n  TYPE_REDEEM_LOCAL_CALL_BACK = 3,\n}\n\nexport class StargateBridge__evm implements BridgeApi<Signer, StargateFee> {\n  protected feeLibraryCache: Map<string, StargateFeeLibrary> = new Map();\n  protected readonly erc20: ERC20__api;\n  constructor(\n    protected readonly providerFactory: ProviderFactory,\n    public readonly sdk: StargateSDK,\n  ) {\n    this.erc20 = new ERC20__api(providerFactory);\n  }\n\n  async getAllowance(currency: Currency, address: string): Promise<CurrencyAmount> {\n    if (isNativeCurrency(currency)) return CurrencyAmount.fromRawAmount(currency, MaxUint256);\n    const router = this.sdk.getRouterAddress(currency.chainId);\n    return this.erc20.forToken(currency).allowance(address, router);\n  }\n\n  async approve(amount: CurrencyAmount) {\n    const srcCurrency = amount.currency;\n    assert(isToken(srcCurrency), 'Not a token');\n    const router = this.sdk.getRouterAddress(srcCurrency.chainId);\n    return this.erc20.forToken(amount.currency).approve(amount, router);\n  }\n\n  supportsTransfer(srcCurrency: Currency, dstCurrency: Currency): boolean {\n    if (!isEvmChainId(srcCurrency.chainId)) return false;\n    const pools = this.sdk.getAllPools();\n    if (!pools.some((pool) => pool.currency.equals(srcCurrency))) return false;\n    const path = this.sdk.tryGetPath(srcCurrency, dstCurrency);\n    if (!path) return false;\n    return !this.sdk.isDisabledPath(path.srcPool, path.dstPool);\n  }\n\n  supportsClaim(currency: Currency): boolean {\n    if (!isEvmChainId(currency.chainId)) return false;\n    const pools = this.sdk.getAllPools();\n    return pools.some((pool) => pool.currency.equals(currency));\n  }\n\n  supportsRegister(currency: Currency): boolean {\n    return this.supportsClaim(currency);\n  }\n\n  async isRegistered(currency: Currency, address: string): Promise<boolean> {\n    return true;\n  }\n\n  async getUnclaimed(currency: Currency, address: string): Promise<CurrencyAmount<Currency>> {\n    return CurrencyAmount.fromRawAmount(currency, 0);\n  }\n\n  claim(currency: Currency): Promise<Transaction<Signer>> {\n    throw new Error('Method not supported.');\n  }\n\n  register(currency: Currency): Promise<Transaction<Signer>> {\n    throw new Error('Method not supported.');\n  }\n\n  transfer(input: TransferInput): Promise<Transaction<Signer>> {\n    const {srcPool} = this.sdk.getPath(input.srcCurrency, input.dstCurrency);\n    if (srcPool?.poolId === 13) return this.transferEth(input);\n    return this.transferToken(input);\n  }\n\n  protected async transferEth(input: TransferInput): Promise<Transaction<Signer>> {\n    const {srcPool, dstPool} = this.sdk.getPath(input.srcCurrency, input.dstCurrency);\n    assert(srcPool.poolId === 13, 'eth');\n    assert(dstPool.poolId === 13, 'eth');\n    const provider = this.providerFactory(input.srcChainId);\n    const routerEthAddress = this.sdk.getRouterEthAddress(srcPool.chainId);\n    const router = RouterETH__factory.connect(routerEthAddress, provider);\n    const amountLD = toBigNumber(input.amount);\n    const minAmountLD = toBigNumber(input.minAmount);\n\n    const value = toBigNumber(input.amount.add(input.fee.nativeFee));\n\n    const populatedTransaction = router.populateTransaction.swapETH(\n      input.dstChainId,\n      input.srcAddress,\n      input.dstAddress,\n      amountLD,\n      minAmountLD,\n      {value},\n    );\n\n    return createTransaction(populatedTransaction, {provider});\n  }\n\n  protected async transferToken(input: TransferInput): Promise<Transaction<Signer>> {\n    validateInput(input);\n    const {srcPool, dstPool} = this.sdk.getPath(input.srcCurrency, input.dstCurrency);\n\n    const provider = this.providerFactory(input.srcChainId);\n    const routerAddress = this.sdk.getRouterAddress(srcPool.chainId);\n    const router = Router__factory.connect(routerAddress, provider);\n    const amountLD = toBigNumber(input.amount);\n\n    const minAmountLD = toBigNumber(\n      // at this point the conversion is safe\n      castCurrencyAmountUnsafe(input.minAmount, input.srcCurrency),\n    );\n\n    const {adapterParams} = input;\n\n    const lzTxParams = this.lzTxParams(adapterParams);\n    const payload = '0x';\n    const value = toBigNumber(input.fee.nativeFee);\n\n    const populatedTransaction = router.populateTransaction.swap(\n      input.dstChainId,\n      srcPool.poolId,\n      dstPool.poolId,\n      input.srcAddress,\n      amountLD,\n      minAmountLD,\n      lzTxParams,\n      input.dstAddress,\n      payload,\n      {value},\n    );\n\n    return createTransaction(populatedTransaction, {\n      provider,\n    });\n  }\n\n  async getMessageFee(\n    srcCurrency: Currency,\n    dstCurrency: Currency,\n    adapterParams: AdapterParams,\n  ): Promise<FeeQuote> {\n    const srcChainId = srcCurrency.chainId;\n    const dstChainId = dstCurrency.chainId;\n    const routerAddress = this.sdk.getRouterAddress(srcChainId);\n    const provider = this.providerFactory(srcChainId);\n    const router = Router__factory.connect(routerAddress, provider);\n\n    const payload = '0x';\n    const lzTxParams: Router.LzTxObjStruct = this.lzTxParams(adapterParams);\n\n    const native = getNativeCurrency(srcChainId);\n    const [nativeFee, lzFee] = await router.quoteLayerZeroFee(\n      dstChainId,\n      FunctionType.TYPE_SWAP_REMOTE,\n      ONE_ADDRESS,\n      payload,\n      lzTxParams,\n    );\n    return {\n      nativeFee: toCurrencyAmount(native, nativeFee),\n      zroFee: toCurrencyAmount(native, lzFee),\n    };\n  }\n\n  protected lzTxParams(adapterParams: AdapterParams): Router.LzTxObjStruct {\n    const lzTxParams: Router.LzTxObjStruct = {\n      dstGasForCall: adapterParams.extraGas,\n      dstNativeAddr: adapterParams.dstNativeAddress ?? ONE_ADDRESS,\n      dstNativeAmount: adapterParams.dstNativeAmount\n        ? toBigNumber(adapterParams.dstNativeAmount)\n        : constants.Zero,\n    };\n    return lzTxParams;\n  }\n\n  protected getFeeLibraryAddress = pMemoize(\n    async (lpToken: Token): Promise<string> => {\n      const provider = this.providerFactory(lpToken.chainId);\n      const pool = Pool__factory.connect(lpToken.address, provider);\n      return pool.feeLibrary();\n    },\n    {cacheKey: ([lpToken]) => currencyKey(lpToken)},\n  );\n\n  protected async getFeeLibrary(lpToken: Token): Promise<StargateFeeLibrary> {\n    const feeLibraryAddress = await this.getFeeLibraryAddress(lpToken);\n    const provider = this.providerFactory(lpToken.chainId);\n    const feeLibrary = StargateFeeLibrary__factory.connect(feeLibraryAddress, provider);\n    return feeLibrary;\n  }\n\n  async getOutput(\n    inputAmountLD: CurrencyAmount<Currency>,\n    dstCurrency: Currency,\n  ): Promise<{amount: CurrencyAmount; fee: StargateFee}> {\n    const srcCurrency = inputAmountLD.currency;\n    const {srcPool, dstPool} = this.sdk.getPath(srcCurrency, dstCurrency);\n    const feeLibrary = await this.getFeeLibrary(srcPool.lpToken);\n\n    const amountSD = amountLDtoSD(inputAmountLD, srcPool.lpToken);\n\n    const srcAddress = ONE_ADDRESS;\n\n    const fees = await feeLibrary.getFees(\n      srcPool.poolId,\n      dstPool.poolId,\n      dstPool.chainId,\n      srcAddress,\n      toBigNumber(amountSD),\n    );\n\n    const feeSD = {\n      eqFee: toCurrencyAmount(srcPool.lpToken, fees.eqFee),\n      eqReward: toCurrencyAmount(srcPool.lpToken, fees.eqReward),\n      lpFee: toCurrencyAmount(srcPool.lpToken, fees.lpFee),\n      protocolFee: toCurrencyAmount(srcPool.lpToken, fees.protocolFee),\n      lkbRemove: toCurrencyAmount(srcPool.lpToken, fees.lkbRemove),\n    };\n\n    const feeLD = {\n      eqFee: amountSDtoLD(feeSD.eqFee, srcPool.currency),\n      eqReward: amountSDtoLD(feeSD.eqReward, srcPool.currency),\n      lpFee: amountSDtoLD(feeSD.lpFee, srcPool.currency),\n      protocolFee: amountSDtoLD(feeSD.protocolFee, srcPool.currency),\n      lkbRemove: amountSDtoLD(feeSD.lkbRemove, srcPool.currency),\n    };\n\n    const totalFeeSD = feeSD.eqFee\n      //\n      .add(feeSD.protocolFee)\n      .add(feeSD.lpFee)\n      .subtract(feeSD.eqReward);\n\n    const totalFeeLD = amountSDtoLD(totalFeeSD, srcCurrency);\n    const inputAmountSD = amountLDtoSD(inputAmountLD, srcPool.lpToken);\n    const outputAmountSD = inputAmountSD.subtract(totalFeeSD);\n    const outputAmountRD = amountSDtoLD(outputAmountSD, dstPool.currency);\n\n    const output = {\n      amount: outputAmountRD,\n      fee: {\n        totalFee: totalFeeLD,\n        ...feeLD,\n      },\n    };\n    return output;\n  }\n\n  async getLimit(srcCurrency: Currency, dstCurrency: Currency): Promise<CurrencyAmount<Currency>> {\n    const {srcPool, dstPool} = this.sdk.getPath(srcCurrency, dstCurrency);\n\n    const provider = this.providerFactory(srcPool.chainId);\n    const pool = Pool__factory.connect(srcPool.lpToken.address, provider);\n\n    const chainPath = await pool.getChainPath(dstPool.chainId, dstPool.poolId);\n    const balanceLP = toCurrencyAmount(srcPool.lpToken, chainPath.balance);\n    const balanceLD = amountSDtoLD(balanceLP, srcCurrency);\n    return balanceLD;\n  }\n\n  async getExtraGas(srcCurrency: Currency, dstCurrency: Currency): Promise<number> {\n    return 0;\n  }\n\n  async getDuration(srcCurrency: Currency, dstCurrency: Currency): Promise<number> {\n    // todo: use UA configuration\n    return getDefaultMessageDuration(srcCurrency.chainId, dstCurrency.chainId);\n  }\n}\n\nfunction amountLDtoSD(amountLD: CurrencyAmount, lpToken: Currency): CurrencyAmount {\n  // see Pool.sol:\n  //\n  // sharedDecimals = _sharedDecimals;\n  // decimals = uint8(_sharedDecimals);\n  const sharedDecimals = lpToken.decimals;\n\n  return CurrencyAmount.fromRawAmount(\n    lpToken,\n    amountLD.multiply(BigInt(10) ** BigInt(sharedDecimals)).divide(amountLD.decimalScale).quotient,\n  );\n}\n\nfunction amountSDtoLD(\n  amountSD: CurrencyAmount,\n  baseToken: Currency,\n  localDecimals = baseToken.decimals,\n): CurrencyAmount {\n  return CurrencyAmount.fromRawAmount(\n    baseToken,\n    amountSD.multiply(BigInt(10) ** BigInt(localDecimals)).divide(amountSD.decimalScale).quotient,\n  );\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { Pool, PoolInterface } from \"../Pool\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_router\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_sharedDecimals\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_localDecimals\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_feeLibrary\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_symbol\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountLP\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Burn\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"weight\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ChainPathUpdate\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"chainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"idealBalance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"CreditChainPath\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"batched\",\n        type: \"bool\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"swapDeltaBP\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"lpDeltaBP\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"defaultSwapMode\",\n        type: \"bool\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"defaultLPMode\",\n        type: \"bool\",\n      },\n    ],\n    name: \"DeltaParamUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"feeLibraryAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"FeeLibraryUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"mintFeeBP\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"FeesUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountLP\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"InstantRedeemLocal\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountLP\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"mintFeeAmountSD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Mint\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountLP\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"chainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"RedeemLocal\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_amountSD\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_amountToMintSD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RedeemLocalCallback\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"chainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountLP\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RedeemRemote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"credits\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"idealBalance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"SendCredits\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"swapStop\",\n        type: \"bool\",\n      },\n    ],\n    name: \"StopSwapUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"chainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"eqReward\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"eqFee\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"protocolFee\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"lpFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Swap\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"protocolFee\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"dstFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"SwapRemote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WithdrawMintFeeBalance\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WithdrawProtocolFeeBalance\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"swapAmount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"mintAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WithdrawRemote\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BP_DENOMINATOR\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"PERMIT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"activateChainPath\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"batched\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"_fullMode\",\n        type: \"bool\",\n      },\n    ],\n    name: \"callDelta\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"chainPathIndexLookup\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"chainPaths\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"ready\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"weight\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lkb\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"credits\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"idealBalance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"convertRate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_weight\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"createChainPath\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"credits\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"idealBalance\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Pool.CreditObj\",\n        name: \"_c\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"creditChainPath\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"defaultLPMode\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"defaultSwapMode\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"deltaCredit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"eqFeePool\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"feeLibrary\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getChainPath\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bool\",\n            name: \"ready\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"uint16\",\n            name: \"dstChainId\",\n            type: \"uint16\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"dstPoolId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"weight\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"balance\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lkb\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"credits\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"idealBalance\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Pool.ChainPath\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getChainPathsLength\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    name: \"instantRedeemLocal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"localDecimals\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lpDeltaBP\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"mintFeeBP\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"mintFeeBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"poolId\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"protocolFeeBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    name: \"redeemLocal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountSD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountToMintSD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"redeemLocalCallback\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountSD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"redeemLocalCheckOnRemote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"swapAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"mintAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLP\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"redeemRemote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"router\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"sendCredits\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"credits\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"idealBalance\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Pool.CreditObj\",\n        name: \"c\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"_batched\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_swapDeltaBP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_lpDeltaBP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_defaultSwapMode\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_defaultLPMode\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setDeltaParam\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_mintFeeBP\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setFee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_feeLibraryAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"setFeeLibrary\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"_swapStop\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setSwapStop\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_weight\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setWeightForChainPath\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"sharedDecimals\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"stopSwap\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minAmountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"newLiquidity\",\n        type: \"bool\",\n      },\n    ],\n    name: \"swap\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"eqFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"eqReward\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lpFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"protocolFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lkbRemove\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Pool.SwapObj\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"swapDeltaBP\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"eqFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"eqReward\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lpFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"protocolFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lkbRemove\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Pool.SwapObj\",\n        name: \"_s\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"swapRemote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalLiquidity\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalWeight\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawMintFeeBalance\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawProtocolFeeBalance\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n] as const;\n\nexport class Pool__factory {\n  static readonly abi = _abi;\n  static createInterface(): PoolInterface {\n    return new utils.Interface(_abi) as PoolInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Pool {\n    return new Contract(address, _abi, signerOrProvider) as Pool;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { Router, RouterInterface } from \"../Router\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"chainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"CachedSwapSaved\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"chainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"payload\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"ReceiveFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"bridgeFunctionType\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"chainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Revert\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"activateChainPath\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    name: \"addLiquidity\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"bridge\",\n    outputs: [\n      {\n        internalType: \"contract Bridge\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"cachedSwapLookup\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"payload\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_fullMode\",\n        type: \"bool\",\n      },\n    ],\n    name: \"callDelta\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_nonce\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"clearCachedSwap\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_weight\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"createChainPath\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"_sharedDecimals\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"_localDecimals\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_symbol\",\n        type: \"string\",\n      },\n    ],\n    name: \"createPool\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"credits\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"idealBalance\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Pool.CreditObj\",\n        name: \"_c\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"creditChainPath\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [\n      {\n        internalType: \"contract Factory\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcPoolId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    name: \"instantRedeemLocal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountSD\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"mintFeeOwner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"protocolFeeOwner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"_functionType\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_toAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_transferAndCallPayload\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"dstGasForCall\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"dstNativeAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"dstNativeAddr\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Router.lzTxObj\",\n        name: \"_lzTxParams\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"quoteLayerZeroFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_to\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"dstGasForCall\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"dstNativeAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"dstNativeAddr\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Router.lzTxObj\",\n        name: \"_lzTxParams\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"redeemLocal\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountSD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_mintAmountSD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"redeemLocalCallback\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountSD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_to\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"redeemLocalCheckOnRemote\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minAmountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_to\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"dstGasForCall\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"dstNativeAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"dstNativeAddr\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Router.lzTxObj\",\n        name: \"_lzTxParams\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"redeemRemote\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_nonce\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"retryRevert\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"revertLookup\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"dstGasForCall\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"dstNativeAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"dstNativeAddr\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Router.lzTxObj\",\n        name: \"_lzTxParams\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"revertRedeemLocal\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"sendCredits\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract Bridge\",\n        name: \"_bridge\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract Factory\",\n        name: \"_factory\",\n        type: \"address\",\n      },\n    ],\n    name: \"setBridgeAndFactory\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_batched\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_swapDeltaBP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_lpDeltaBP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_defaultSwapMode\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_defaultLPMode\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setDeltaParam\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_feeLibraryAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"setFeeLibrary\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_mintFeeBP\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setFees\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setMintFeeOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setProtocolFeeOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_swapStop\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setSwapStop\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_weight\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setWeightForChainPath\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minAmountLD\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"dstGasForCall\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"dstNativeAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"dstNativeAddr\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Router.lzTxObj\",\n        name: \"_lzTxParams\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_to\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"swap\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_dstGasForCall\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"eqFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"eqReward\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lpFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"protocolFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lkbRemove\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Pool.SwapObj\",\n        name: \"_s\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"swapRemote\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawMintFee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_poolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawProtocolFee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n] as const;\n\nexport class Router__factory {\n  static readonly abi = _abi;\n  static createInterface(): RouterInterface {\n    return new utils.Interface(_abi) as RouterInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Router {\n    return new Contract(address, _abi, signerOrProvider) as Router;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { RouterETH, RouterETHInterface } from \"../RouterETH\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_stargateEthVault\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_stargateRouter\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_poolId\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"addLiquidityETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"poolId\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"stargateEthVault\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"stargateRouter\",\n    outputs: [\n      {\n        internalType: \"contract IStargateRouter\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_toAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minAmountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n] as const;\n\nexport class RouterETH__factory {\n  static readonly abi = _abi;\n  static createInterface(): RouterETHInterface {\n    return new utils.Interface(_abi) as RouterETHInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): RouterETH {\n    return new Contract(address, _abi, signerOrProvider) as RouterETH;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  StargateFeeLibrary,\n  StargateFeeLibraryInterface,\n} from \"../StargateFeeLibrary\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_factory\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"lpFeeBP\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"protocolFeeBP\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"FeesUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BP_DENOMINATOR\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"VERSION\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"eqFeeBP\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"eqRewardBP\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [\n      {\n        internalType: \"contract Factory\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_srcPoolId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountSD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getFees\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"eqFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"eqReward\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lpFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"protocolFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lkbRemove\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Pool.SwapObj\",\n        name: \"s\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lpFeeBP\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"protocolFeeBP\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_lpFeeBP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_protocolFeeBP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_eqFeeBP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_eqRewardBP\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setFees\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n] as const;\n\nexport class StargateFeeLibrary__factory {\n  static readonly abi = _abi;\n  static createInterface(): StargateFeeLibraryInterface {\n    return new utils.Interface(_abi) as StargateFeeLibraryInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): StargateFeeLibrary {\n    return new Contract(address, _abi, signerOrProvider) as StargateFeeLibrary;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  StargateWidget,\n  StargateWidgetInterface,\n} from \"../StargateWidget\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_stargateRouter\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_stargateRouterETH\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_stargateFactory\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes2\",\n        name: \"partnerId\",\n        type: \"bytes2\",\n      },\n    ],\n    name: \"PartnerSwap\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes2\",\n        name: \"partnerId\",\n        type: \"bytes2\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"tenthBps\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"widgetFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WidgetSwapped\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_UINT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TENTH_BPS_DENOMINATOR\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes2\",\n        name: \"_partnerId\",\n        type: \"bytes2\",\n      },\n    ],\n    name: \"partnerSwap\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"stargateFactory\",\n    outputs: [\n      {\n        internalType: \"contract IStargateFactory\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"stargateRouter\",\n    outputs: [\n      {\n        internalType: \"contract IStargateRouter\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"stargateRouterETH\",\n    outputs: [\n      {\n        internalType: \"contract IStargateRouterETH\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minAmountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_to\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bytes2\",\n        name: \"_partnerId\",\n        type: \"bytes2\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"tenthBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"feeCollector\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IStargateWidget.FeeObj\",\n        name: \"_feeObj\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"swapETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_srcPoolId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_dstPoolId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minAmountLD\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"dstGasForCall\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"dstNativeAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"dstNativeAddr\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct IStargateRouter.lzTxObj\",\n        name: \"_lzTxParams\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_to\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bytes2\",\n        name: \"_partnerId\",\n        type: \"bytes2\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"tenthBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"feeCollector\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IStargateWidget.FeeObj\",\n        name: \"_feeObj\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"swapTokens\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"tokenApproved\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n] as const;\n\nexport class StargateWidget__factory {\n  static readonly abi = _abi;\n  static createInterface(): StargateWidgetInterface {\n    return new utils.Interface(_abi) as StargateWidgetInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): StargateWidget {\n    return new Contract(address, _abi, signerOrProvider) as StargateWidget;\n  }\n}\n","import {Currency, Token} from '@layerzerolabs/ui-core';\n\nexport function currencyKey(currency: Currency): string {\n  return [currency.chainId, currency.symbol, (currency as Token).address].join(':');\n}\n","import {ProviderFactory, createTransaction} from '@layerzerolabs/ui-evm';\n\nimport {StargateBridge__evm} from './StargateBridge__evm';\nimport {StargateSDK} from '../StargateSDK';\nimport {\n  CurrencyAmount,\n  Currency,\n  Transaction,\n  toBigNumber,\n  AdapterParams,\n  FeeQuote,\n  castCurrencyAmountUnsafe,\n  isNativeCurrency,\n  isToken,\n  MaxUint256,\n} from '@layerzerolabs/ui-core';\nimport {BridgeApi, TransferInput} from '@layerzerolabs/ui-bridge-sdk';\nimport {Signer, utils} from 'ethers';\nimport {ChainId} from '@layerzerolabs/lz-sdk';\n\nimport {StargateWidget__factory} from '../evm/contracts';\nimport {IStargateWidget, IStargateRouter} from '../evm/contracts/StargateWidget';\n\nimport assert from 'assert';\n\nexport type PartnerConfig = {\n  partnerId: number;\n  tenthBps: number;\n  feeCollector: string;\n};\n\nconst WIDGET_SWAP_ADDRESS: Record<number, string> = {\n  [ChainId.RINKEBY]: '0x1aE3A80BDCdFEC8c76c6049248E4139160b72FF1',\n  [ChainId.BSC_TESTNET]: '0xcE375F5d95204DB9b110BE3b3C886A33c8168eB2',\n  [ChainId.FUJI]: '0xcE375F5d95204DB9b110BE3b3C886A33c8168eB2',\n  [ChainId.MUMBAI]: '0xcE375F5d95204DB9b110BE3b3C886A33c8168eB2',\n  [ChainId.ARBITRUM_RINKEBY]: '0xcE375F5d95204DB9b110BE3b3C886A33c8168eB2',\n  [ChainId.OPTIMISM_KOVAN]: '0xcE375F5d95204DB9b110BE3b3C886A33c8168eB2',\n  [ChainId.FANTOM_TESTNET]: '0xcbF0B97dbe30406e974F2d1ADF19CD6667d70632',\n  [ChainId.ETHEREUM]: '0x76d4d68966728894961AA3DDC1d5B0e45668a5A6',\n  [ChainId.BSC]: '0x2Eb9ea9dF49BeBB97e7750f231A32129a89b82ee',\n  [ChainId.AVALANCHE]: '0x20293eDD4f52F81234b3997B9AE4742c48005858',\n  [ChainId.POLYGON]: '0xdc2716B92480225533aBC3328C2Ab961f2A9247d',\n  [ChainId.ARBITRUM]: '0x6c33A7b29C8B012D060F3a5046f3ee5aC48f4780',\n  [ChainId.OPTIMISM]: '0x46Bc16F76B0aE14Abb820D3410843Ba54D8ef6f0',\n  [ChainId.FANTOM]: '0xC8e5157EC44E00ff85Bf15D4f50974d3A8166427',\n  [ChainId.METIS]: '0xb63c87D146cbE60B3C0419003Ebd24F21374c8Ae',\n};\n\nexport function getWidgetAddress(chainId: number) {\n  return WIDGET_SWAP_ADDRESS[chainId];\n}\n\ntype StargateWidgetFee = {\n  totalFee: CurrencyAmount;\n  eqFee: CurrencyAmount;\n  eqReward: CurrencyAmount;\n  lpFee: CurrencyAmount;\n  protocolFee: CurrencyAmount;\n  lkbRemove: CurrencyAmount;\n  partnerFee: CurrencyAmount;\n};\n\nexport class StargateWidgetBridge__evm\n  extends StargateBridge__evm\n  implements BridgeApi<Signer, StargateWidgetFee>\n{\n  private readonly tenthBpsDenominator = 100000;\n\n  constructor(\n    providerFactory: ProviderFactory,\n    sdk: StargateSDK,\n    protected partnerConfig: PartnerConfig,\n  ) {\n    super(providerFactory, sdk);\n  }\n\n  private async getPartnerFee(inputAmountLD: CurrencyAmount): Promise<CurrencyAmount> {\n    return inputAmountLD.multiply(this.partnerConfig.tenthBps).divide(this.tenthBpsDenominator);\n  }\n\n  async getAllowance(currency: Currency, address: string): Promise<CurrencyAmount> {\n    if (isNativeCurrency(currency)) return CurrencyAmount.fromRawAmount(currency, MaxUint256);\n    const spender = getWidgetAddress(currency.chainId);\n    return this.erc20.forToken(currency).allowance(address, spender);\n  }\n\n  async approve(amount: CurrencyAmount) {\n    const srcCurrency = amount.currency;\n    assert(isToken(srcCurrency), 'Not a token');\n    const widgetAddress = getWidgetAddress(srcCurrency.chainId);\n    assert(widgetAddress, 'widgetAddress');\n    return this.erc20.forToken(amount.currency).approve(amount, widgetAddress);\n  }\n\n  async getOutput(\n    inputAmountLD: CurrencyAmount<Currency>,\n    dstCurrency: Currency,\n  ): Promise<{\n    amount: CurrencyAmount;\n    fee: StargateWidgetFee;\n  }> {\n    const partnerFee = await this.getPartnerFee(inputAmountLD);\n    const swapAmount = inputAmountLD.subtract(partnerFee);\n    const output = await super.getOutput(swapAmount, dstCurrency);\n\n    const fee: StargateWidgetFee = {\n      ...output.fee,\n      partnerFee,\n    };\n\n    return {\n      amount: output.amount,\n      fee,\n    };\n  }\n\n  protected async transferEth(input: TransferInput): Promise<Transaction<Signer>> {\n    const contract = this.getWidgetContract(input.srcChainId);\n\n    const partnerId = utils.solidityPack(['uint16'], [this.partnerConfig.partnerId]);\n    const value = toBigNumber(input.fee.nativeFee.add(input.amount));\n\n    const populatedTransaction = contract.populateTransaction.swapETH(\n      toBigNumber(input.amount),\n      toBigNumber(input.minAmount),\n      input.dstChainId,\n      input.dstAddress,\n      partnerId,\n      this.feeObj,\n      {value},\n    );\n    return createTransaction(populatedTransaction, {provider: contract.provider});\n  }\n\n  get feeObj() {\n    const feeObj: IStargateWidget.FeeObjStruct = {\n      tenthBps: this.partnerConfig.tenthBps,\n      feeCollector: this.partnerConfig.feeCollector,\n    };\n    return feeObj;\n  }\n\n  async getMessageFee(\n    srcCurrency: Currency,\n    dstCurrency: Currency,\n    adapterParams: AdapterParams,\n  ): Promise<FeeQuote> {\n    const fee = await super.getMessageFee(srcCurrency, dstCurrency, adapterParams);\n\n    return {\n      ...fee,\n      // Transfers that include a partnerId i.e. Widget transfers require slightly more native\n      nativeFee: fee.nativeFee.multiply(110).divide(100),\n    };\n  }\n\n  protected async transferToken(input: TransferInput): Promise<Transaction<Signer>> {\n    const contract = this.getWidgetContract(input.srcChainId);\n    const {srcPool, dstPool} = this.sdk.getPath(input.srcCurrency, input.dstCurrency);\n\n    const lzTxParams: IStargateRouter.LzTxObjStruct = {\n      dstGasForCall: 0,\n      dstNativeAmount: input.adapterParams.dstNativeAmount\n        ? toBigNumber(input.adapterParams.dstNativeAmount)\n        : 0,\n      dstNativeAddr: input.adapterParams.dstNativeAddress ?? input.dstAddress,\n    };\n\n    const partnerId = utils.solidityPack(['uint16'], [this.partnerConfig.partnerId]);\n    const value = toBigNumber(input.fee.nativeFee);\n\n    const minAmountLD = toBigNumber(\n      // at this point the conversion is safe\n      castCurrencyAmountUnsafe(input.minAmount, input.srcCurrency),\n    );\n\n    const populatedTransaction = contract.populateTransaction.swapTokens(\n      input.dstChainId,\n      srcPool.poolId,\n      dstPool.poolId,\n      toBigNumber(input.amount),\n      minAmountLD,\n      lzTxParams,\n      input.dstAddress,\n      partnerId,\n      this.feeObj,\n      {value},\n    );\n\n    return createTransaction(populatedTransaction, {provider: contract.provider});\n  }\n\n  getWidgetContract(chainId: ChainId) {\n    const address = WIDGET_SWAP_ADDRESS[chainId];\n    assert(address, 'WIDGET_SWAP_ADDRESS');\n    const provider = this.providerFactory(chainId);\n    return StargateWidget__factory.connect(address, provider);\n  }\n}\n","import {PoolId} from '@layerzerolabs/sg-sdk';\nimport {Currency} from '@layerzerolabs/ui-core';\nimport {compact} from 'lodash-es';\nimport assert from 'assert';\nimport {ChainId} from '@layerzerolabs/lz-sdk';\nimport {StargateConfig, Path} from './StargateConfig';\nimport {mainnet} from './config/mainnet';\n\nexport class StargateSDK {\n  // groups that can be swapped between\n  private swapGroups: PoolId[][] = [[PoolId.BUSD, PoolId.USDC, PoolId.USDT]];\n  constructor(private config: StargateConfig = mainnet) {}\n\n  tryGetPoolByPoolId = (poolId?: number, chainId?: number) => {\n    const pool = this.config.pools.find((p) => p.chainId === chainId && p.poolId === poolId);\n    return pool;\n  };\n\n  getPoolByPoolId = (poolId: number, chainId: number) => {\n    const pool = this.tryGetPoolByPoolId(poolId, chainId);\n    if (pool) return pool;\n    throw new Error(`No pool for poolId: ${poolId} and chainId: ${chainId}`);\n  };\n\n  getAllChainPaths = (): Path[] => {\n    const {pools} = this.config;\n    return compact(\n      pools.flatMap((srcPool) =>\n        pools.map((dstPool) =>\n          this.isValidPath(srcPool, dstPool) ? {srcPool, dstPool} : undefined,\n        ),\n      ),\n    );\n  };\n\n  getAllPools = () => {\n    return this.config.pools;\n  };\n\n  getAllFarms = () => {\n    return this.config.farms;\n  };\n\n  private isValidPath = (srcPool: PoolLike, dstPool: PoolLike) => {\n    // don't allow same chain transfers\n    if (srcPool.chainId === dstPool.chainId) return false;\n\n    // USDT.M metis special case - can be swapped only if one of the pools is metis\n    if (srcPool.poolId === 19 && dstPool.poolId === 19) {\n      if (!isMetis(srcPool.chainId) && !isMetis(dstPool.chainId)) {\n        return false;\n      }\n    }\n\n    return (\n      srcPool.poolId === dstPool.poolId ||\n      // exchange groups\n      this.swapGroups.some(\n        (group) => group.includes(srcPool.poolId) && group.includes(dstPool.poolId),\n      )\n    );\n  };\n\n  tryGetPath = (srcCurrency?: Currency, dstCurrency?: Currency) => {\n    if (!srcCurrency || !dstCurrency) return undefined;\n    const srcPools = this.config.pools.filter((p) => p.currency.equals(srcCurrency));\n    const dstPools = this.config.pools.filter((p) => p.currency.equals(dstCurrency));\n    for (const srcPool of srcPools) {\n      for (const dstPool of dstPools) {\n        if (this.isValidPath(srcPool, dstPool)) return {srcPool, dstPool};\n      }\n    }\n    return undefined;\n  };\n\n  getPath = (srcCurrency: Currency, dstCurrency: Currency) => {\n    const path = this.tryGetPath(srcCurrency, dstCurrency);\n    if (path) return path;\n    throw new Error('No path found');\n  };\n\n  // other\n\n  tryGetRouterAddress(chainId: number) {\n    return this.config.router[chainId];\n  }\n  getRouterAddress = (chainId: number) => {\n    const address = this.tryGetRouterAddress(chainId);\n    assert(address, 'No router address');\n    return address;\n  };\n  tryGetRouterEthAddress(chainId: number) {\n    return this.config.routerEth[chainId];\n  }\n  getRouterEthAddress = (chainId: number) => {\n    const address = this.tryGetRouterEthAddress(chainId);\n    assert(address, 'No router ETH address');\n    return address;\n  };\n  isDisabledPath(srcPool: PoolLike, dstPool: PoolLike): boolean {\n    for (const rule of this.config.disabled) {\n      if (rule.srcChainId && srcPool.chainId !== rule.srcChainId) continue;\n      if (rule.dstChainId && dstPool.chainId !== rule.dstChainId) continue;\n      if (rule.srcPoolId && srcPool.poolId !== rule.srcPoolId) continue;\n      if (rule.dstPoolId && dstPool.poolId !== rule.dstPoolId) continue;\n      return true;\n    }\n\n    return false;\n  }\n}\n\nfunction isMetis(chainId: number) {\n  return chainId === ChainId.METIS || chainId === ChainId.METIS_TESTNET;\n}\n\ntype PoolLike = {\n  chainId: number;\n  poolId: number;\n};\n"]}